---
# tasks file for pki
- name: Install a list of packages
  ansible.builtin.apt:
    pkg:
    - jq
    - python3-pip
    update_cache: yes

- name: Install pexpect
  ansible.builtin.pip:
    name: pexpect

- name: Create Docker folder
  ansible.builtin.file:
    path: /docker
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create Docker pki folder
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - "{{ docker_pki_folder }}"
    - "{{ docker_pki_folder }}/certs"
    - "{{ docker_pki_folder }}/certs/revoked"

- name: Template config files
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ docker_pki_folder }}/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - "docker-compose.yml"
    - "password.txt"

- name: Docker Compose up
  ansible.builtin.command:
    cmd: "docker compose up -d"
    chdir: "{{ docker_pki_folder }}"
  register: docker_compose_up

- name: Install step-cli
  ansible.builtin.apt:
    deb: https://dl.smallstep.com/gh-release/cli/docs-cli-install/v0.23.4/step-cli_0.23.4_amd64.deb

- name: Check if fingerprint already set
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.step/certs/root_ca.crt"
  register: pki_register_ca_cert

- name: get CA fingerprint
  ansible.builtin.command:
    cmd: docker compose run pki step certificate fingerprint certs/root_ca.crt
    chdir: "{{ docker_pki_folder }}"
  when: not pki_register_ca_cert.stat.exists
  register: pki_register_ca_finderprint

- name: set CA fingerprint
  ansible.builtin.command:
    cmd: step ca bootstrap --ca-url https://localhost:9000 --fingerprint {{ pki_register_ca_finderprint.stdout }}
  when: not pki_register_ca_cert.stat.exists

- name: Check if root ca crt file exists
  stat:
    path: "{{ docker_pki_folder }}/certs/root_ca.crt"
  register: ca_sert_file

- name: get root ca crt file from smallstep
  ansible.builtin.shell:
    cmd: docker compose exec pki cat certs/root_ca.crt > certs/root_ca.crt
    chdir: "{{ docker_pki_folder }}"
  when: not ca_sert_file.stat.exists

- name: Download root ca crt file
  ansible.builtin.fetch:
    src: "{{ docker_pki_folder }}/certs/root_ca.key"
    dest: output/pki_certs/root_ca.crt
    flat: yes
  when: not ca_sert_file.stat.exists

- name: revoke certs
  include_tasks: revoke_certs.yml
  loop: "{{ pki_revoke_fqdns }}"
  when: pki_revoke_certs is true
  tags: serial

- name: Create certs
  include_tasks: generate_cersts.yml
  loop: "{{ pki_fqdns }}"
